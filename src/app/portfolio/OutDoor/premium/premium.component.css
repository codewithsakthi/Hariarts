@import url("https://fonts.googleapis.com/css?family=Raleway:400,700");
*, *:before, *:after {
  box-sizing: border-box;
}

body {
  min-height: 100vh;
  font-family: "Raleway", sans-serif;
}

.container1 {
  position: absolute;
  width: 100%;
  height: 720px;
  overflow: hidden;
}
.container1:hover .top:before, .container1:hover .top:after, .container1:hover .bottom:before, .container1:hover .bottom:after, .container1:active .top:before, .container1:active .top:after, .container1:active .bottom:before, .container1:active .bottom:after {
  margin-left: 200px;
  transform-origin: -200px 50%;
  transition-delay: 0s;
}
.filter-button.active-link {
  text-decoration: none; /* Remove the default underline */
  color: #FFA700; /* Adjust the color for the active state */
  border: 2px solid #FFFFF0; /* Add a border for the active state */
  padding: 4px 8px; /* Add padding for a better visual appearance */
}

.filter-button.active-link:hover {
  color: red; /* Adjust the color for the hover state */
  border: 2px solid red; /* Add a border for the hover state */
}

.filter-button.active-link:active {
  color: green; /* Adjust the color for the active state */
  border: 2px solid green; /* Add a border for the active state */
}
.container1:hover .center, .container1:active .center {
  opacity: 1;
  transition-delay: 0.2s;
}

.top:before, .top:after, .bottom:before, .bottom:after {
  content: "";
  display: block;
  position: absolute;
  width: 200vmax;
  height: 200vmax;
  top: 50%;
  left: 50%;
  margin-top: -100vmax;
  transform-origin: 0 50%;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  z-index: 10;
  opacity: 0.65;
  transition-delay: 0.2s;
}

.top:before {
  transform: rotate(45deg);
  background: #e46569;
}
.top:after {
  transform: rotate(135deg);
  background: #ecaf81;
}

.bottom:before {
  transform: rotate(-45deg);
  background: #60b8d4;
}
.bottom:after {
  transform: rotate(-135deg);
  background: #3745b5;
}

.center {
  position: absolute;
  width: 400px;
  height: 400px;
  top: 50%;
  left: 50%;
  margin-left: -200px;
  margin-top: -200px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 30px;
  opacity: 0;
  transition: all 0.5s cubic-bezier(0.445, 0.05, 0, 1);
  transition-delay: 0s;
  color: #333;
}
.center input {
  width: 100%;
  padding: 15px;
  margin: 5px;
  border-radius: 1px;
  border: 1px solid #ccc;
  font-family: inherit;
}
/* app.component.css */


.folder-card {
  cursor: pointer;
  border: 1px solid #ccc;
  margin-bottom: 20px;
}
.container[_ngcontent-ng-c244320390] {
  margin-top: -1px;
}

.image-card {
  border: 1px solid #ccc;
  margin-bottom: 20px;
}

.card-body {
  display: flex;
  align-items: center;
}

.card-img-top {
  max-width: 100%;
  height: auto;
}

/* Add this CSS to your component's CSS file or a global CSS file */
.bezel-less-card {
  border: none;
  box-shadow: none;
}

.unique-title-font {
  /* Define your unique font styles here */
  font-family: 'Your Unique Font', sans-serif; /* Replace 'Your Unique Font' with the actual font name */
  font-size: 18px; /* Adjust font size as needed */
  font-weight: bold; /* Adjust font weight as needed */
}

.container {
  padding: 20px;
}

.paragraph {
  font-family: cursive;
  font-size: 20px;
  text-align: justify;
  line-height: 1.6em;
}



.last-paragraph {
  padding-bottom: 90px;
}


:host {
display: block;
text-align: center;
}

.gallery-lightbox-container {
position: relative;
padding: 25px;
display: block;
margin: 0 auto;
}

.gallery1{
line-height: 0;
column-count: 3;
column-gap: 30px;
}

.gallery-img img {
width: 100%;
height: auto;
cursor: zoom-in;
border-radius: .35rem;
margin-bottom: 30px;
box-shadow: 0 1px 5px rgba(0, 0, 0, .21);
}

.lightbox {
display: block;
margin: 0 auto;
align-items: center;
position: fixed;
justify-content: center;
top: 0;
left: 0;
right: 0;

background-color: rgb(0, 0, 0);
}

.count {
position: absolute;
top: 5  ;
left: 0;
width: 7%;
height: 10%;
color: rgb(255, 255, 255);
opacity: 0.7;
font-size: 18px;
display: flex;
justify-content: center;
align-items: center;
margin-left: 5px;
z-index: 100;
}

.close-btn {
position: absolute;
top: 0;
right: 0;
padding: 0;
color: rgb(255, 255, 255);
background: 0 0;
border: 0;
cursor: pointer;
width: 7%;
height: 10%;
z-index: 2;
}

.fa-times {
font-size: 25px;
}

.btn-lightbox-carousel {
position: absolute;
display: flex;
justify-content: center;
align-items: center;
z-index: 1;
width: 8%;
height: 8%;
padding: 0;
color: aliceblue;
text-align: center;
background: 0 0;
border: 0;
cursor: pointer;
}

.btn-prev {
left: 0;
}

.btn-next {
right: 0;
}

.icon-lightbox-carousel {
color: aliceblue;
opacity: 0.5;
transition: all 0.15s ease;
}

.icon-lightbox-carousel:hover {
opacity: 0.9 !important;
}

.icon-lightbox-carousel:active {
opacity: 0.5 !important;
}


.icon-prev,
.icon-next {
font-size: 30px;
color: #ffffff;
}
.lightbox-img img{
width: 100%;
border-radius: .35rem;
display: block;
margin: 0 auto;

}

.image-container {
position: relative;
max-width: 640px; /* Adjust the max width as needed */
margin: 0 auto;
box-shadow: 0 2px 10px rgb(0, 0, 0);
border-radius: 8px;
overflow: hidden;
background-color: #000;
display: block;
margin: 0 auto;
}

.image-container img {
width: 100%;
height: auto;
display: block;
margin: 0 auto;
}

.overlay {
position: absolute;
top: 50%;
left: 50%;
transform: translate(-50%, -50%);
opacity: 0.8;
transition: all 0.3s ease;
}

.overlay a i.fab.fa-youtube {
font-size: 64px;
color: red;
transition: all 0.3s ease;
}

.image-container:hover .overlay {
opacity: 1;
}

.image-container:hover img {
transform: scale(1.03); /* Slightly zoom in on hover */
filter: brightness(90%); /* Slightly dim the image on hover */
}

/* Add this to your CSS file */
.active-button {
background-color: #ff5733; /* Change to your desired active color */
color: #fff; /* Change to your desired text color for active button */
}
@media (max-width: 768px) {
.lightbox {
  justify-content: flex-start;
}
.lightbox-img img {
  height: 700px;
  max-width: 90%;
  max-height: 60%;
}
.count,
.close-btn,
.btn-lightbox-carousel {
  width: 12%;
  height: 15%;
  color: rgb(253, 253, 253);
}

}
@media (max-width: 768px) {
.btn-lightbox-carousel {
  width: 15%;
  height: 15%;
  font-size: 20px;
}
}
@media (max-width: 768px) {
.active-button {
  background-color: #ff5733; /* Change to your desired active color */
  color: #fff; /* Change to your desired text color for active button */
}
}

/* Media query for screens up to 768px width */
@media (max-width: 768px) {
.lightbox-img img {
    height: auto; /* Adjust the height and width as needed for smaller screens */
    max-width: 100%; /* Ensure the image fits within the screen width */
    max-height: 60vh; /* Adjust the maximum height for the lightbox image */
}

/* Add other responsive styles for screens up to 768px here */
}

/* Media query for screens up to 576px width */
@media (max-width: 576px) {
.lightbox-img img {
    height: auto; /* Adjust the height and width as needed for very small screens */
    max-width: 100%; /* Ensure the image fits within the screen width */
    max-height: 40vh; /* Adjust the maximum height for the lightbox image */
}

/* Add other responsive styles for screens up to 576px here */
}
.lightbox-img {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh; /* Set the lightbox height to the viewport height for centering */
  background-color: rgba(0, 0, 0, 1);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.lightbox-img img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain; /* Fit and center the image within the container */
  display: block;
  margin: 0 auto;
}
/* CSS for the spinner container */
.spinner-container {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%; /* You might need to adjust the height based on your design */
}

/* CSS for the spinner */
.spinner {
  border: 4px solid rgba(255, 255, 255, 0.3);
  border-top: 4px solid #007bff; /* Change the color as needed */
  border-radius: 50%;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Define the default styles for the filter buttons */
.filter-button {
  background-color: transparent;
  border: none;
  color: black;
  text-decoration: none;
  cursor: pointer;
  padding: 10px 20px;
  font-size: 16px;
  font-family: 'DM Serif Display', serif;

}

/* Define the hover style to add an underline */
.filter-button:hover {
  color: red;
  border-bottom: 2px solid red;
}
body {
  font-family: 'Source Sans Pro', sans-serif;
}

h1, h2, h3 {
  font-family: 'DM Serif Display', serif;
}
.home {
  --s: 50px;
  --c: #191b22;
  --_s: calc(2*var(--s)) calc(2*var(--s));
  --_g: 35.36% 35.36% at;
  --_c: #0000 66%, #20222a 68% 70%, #0000 72%;
  background: 
    radial-gradient(var(--_g) 100% 25%, var(--_c)) var(--s) var(--s) / var(--_s), 
    radial-gradient(var(--_g) 0 75%, var(--_c)) var(--s) var(--s) / var(--_s), 
    radial-gradient(var(--_g) 100% 25%, var(--_c)) 0 0 / var(--_s), 
    radial-gradient(var(--_g) 0 75%, var(--_c)) 0 0 / var(--_s), 
    repeating-conic-gradient(var(--c) 0 25%, #0000 0 50%) 0 0 / var(--_s), 
    radial-gradient(var(--_c)) 0 calc(var(--s)/2) / var(--s) var(--s) var(--c);
  background-attachment: fixed;
}